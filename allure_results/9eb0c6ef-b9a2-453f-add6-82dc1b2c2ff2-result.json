{"name": "200 OK при запросе на принятие 5 валидных заказов подряд 1 курьером.", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидалось: 200 OK, получено {\"code\":404,\"message\":\"Заказа с таким id не существует\"}\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <test_accept_order.TestAcceptOrder object at 0x00000233CC43A650>, class_courier = 465004, station = '109'\n\n    @allure.title('200 OK при запросе на принятие 5 валидных заказов подряд 1 курьером.')\n    @allure.description('Создаем курьера фикстурой class_courier для всего класса и получаем его ID. В рамках параметрического теста создается заказ'\n                        ' на заданной станции метро. Также проверяется, что заказ создан и успешно находится в системе по track номеру.'\n                        ' Отправляется PUT запрос на ручку /api/v1/orders/accept/OrderID?courierId=CourierID для принятия заказа курьером class_courier.'\n                        ' Проверяем, что каждый заказ принят, ответ 200 ОК и тело ответа {\"ok\":true}.')\n    @pytest.mark.parametrize('station', ['107', '108', '109', '110', '111'])\n    def test_accept_order_10_orders_accepted_by_courier_success_200(self, class_courier, station):\n        order_track = Order.create_order_and_get_track_confirmed_line(station)\n        path = f'{config.ACCEPT_ORDER_PATH}{order_track}?courierId={class_courier}'\n        response = Request.put_no_payload(path)\n        expected_response_body = {\"ok\": True}\n>       assert response.status_code == 200, f'Ожидалось: 200 OK, получено {response.text}'\nE       AssertionError: Ожидалось: 200 OK, получено {\"code\":404,\"message\":\"Заказа с таким id не существует\"}\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests\\test_accept_order.py:91: AssertionError"}, "description": "Создаем курьера фикстурой class_courier для всего класса и получаем его ID. В рамках параметрического теста создается заказ на заданной станции метро. Также проверяется, что заказ создан и успешно находится в системе по track номеру. Отправляется PUT запрос на ручку /api/v1/orders/accept/OrderID?courierId=CourierID для принятия заказа курьером class_courier. Проверяем, что каждый заказ принят, ответ 200 ОК и тело ответа {\"ok\":true}.", "steps": [{"name": "Создание заказа на заданной ветке метро, проверка наличия в системе и возвращение его номера", "status": "passed", "steps": [{"name": "Изменение одного из полей данных для соответствия тестовому сценарию.", "status": "passed", "parameters": [{"name": "param", "value": "{'firstName': 'Naruto', 'lastName': 'Uchiha', 'address': 'Konoha, 142 apt.', 'metroStation': 4, 'phone': '+7 800 355 35 35', 'rentTime': 5, 'deliveryDate': '2025-03-03', 'comment': 'Saske, come back to Konoha', 'color': ['BLACK']}"}, {"name": "key", "value": "'metroStation'"}, {"name": "value", "value": "'109'"}], "start": 1738945774393, "stop": 1738945774393}, {"name": "POST request.", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders'"}, {"name": "payload", "value": "{'firstName': 'Naruto', 'lastName': 'Uchiha', 'address': 'Konoha, 142 apt.', 'metroStation': '109', 'phone': '+7 800 355 35 35', 'rentTime': 5, 'deliveryDate': '2025-03-03', 'comment': 'Saske, come back to Konoha', 'color': ['BLACK']}"}], "start": 1738945774393, "stop": 1738945774463}, {"name": "Проверка наличия заказа в системе, поиск по номеру.", "status": "passed", "steps": [{"name": "GET request.", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders/track?t=512480'"}], "start": 1738945774464, "stop": 1738945774537}], "parameters": [{"name": "order_track", "value": "512480"}], "start": 1738945774464, "stop": 1738945774537}], "parameters": [{"name": "line", "value": "'109'"}], "start": 1738945774393, "stop": 1738945774537}, {"name": "PUT request без payload", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders/accept/512480?courierId=465004'"}], "start": 1738945774538, "stop": 1738945774604}], "attachments": [{"name": "stdout", "source": "a4df392e-9b6a-4417-954e-f1a68be4405b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "station", "value": "'109'"}], "start": 1738945774392, "stop": 1738945774605, "uuid": "135cb12a-6e52-4b31-8734-cbbe91bcbbf3", "historyId": "706284300ba3283e5ae91691c5db4ed3", "testCaseId": "f7614c0582e3571c23f454208318d9c2", "fullName": "tests.test_accept_order.TestAcceptOrder#test_accept_order_10_orders_accepted_by_courier_success_200", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('class_courier')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_accept_order"}, {"name": "subSuite", "value": "TestAcceptOrder"}, {"name": "host", "value": "k-julls"}, {"name": "thread", "value": "14568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_accept_order"}]}