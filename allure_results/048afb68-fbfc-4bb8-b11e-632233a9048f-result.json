{"name": "200 OK успешное получение активных/завершенных заказов курьера на заданной станции метро.", "status": "failed", "statusDetails": {"message": "AssertionError: Количество принятых курьером заказов на станции 110 не 1, []\nassert 0 == 1\n +  where 0 = len([])\n +    where [] = <built-in method get of dict object at 0x00000233CC508640>('orders')\n +      where <built-in method get of dict object at 0x00000233CC508640> = {'availableStations': [], 'orders': [], 'pageInfo': {'limit': 30, 'page': 0, 'total': 0}}.get\n +        where {'availableStations': [], 'orders': [], 'pageInfo': {'limit': 30, 'page': 0, 'total': 0}} = json()\n +          where json = <Response [200]>.json", "trace": "self = <test_get_orders_list.TestGetOrdersList object at 0x00000233CC4EC050>, courier_id = 465021\n\n    @allure.title('200 OK успешное получение активных/завершенных заказов курьера на заданной станции метро.')\n    @allure.description('Создаем курьера фикстурой courier_id и получаем его ID.'\n                        ' Cоздаем заказ на станции метро 110 и на станции метро 89.'\n                        ' Курьер принимает заказы.'\n                        ' Отправляем GET запрос на ручку /api/v1/orders?courierId=IDКурьера&nearestStation=[\"110\"]. Проверяем что ответ 200 OK,'\n                        ' в списке вернулся 1 заказ на станции метро 110 и его track номер соответствует принятому заказу.'\n                        ' Курьер удаляется из системы фикстурой courier_id.')\n    def test_get_orders_list_orders_accepted_by_courier_set_station_success_200(self, courier_id):\n        expected_station_1 = '110'\n        expected_station_2 = '89'\n        order_track_1 = Order.create_order_and_get_track_confirmed_line(expected_station_1)\n        order_track_2 = Order.create_order_and_get_track_confirmed_line(expected_station_2)\n        Courier.accept_order(courier_id, order_track_1)\n        Courier.accept_order(courier_id, order_track_2)\n        path = f'{config.COURIER_ORDERS}{courier_id}&nearestStation=[\"{expected_station_1}\"]'\n        response = Request.get(path)\n        assert response.status_code == 200, f'Ожидалось: 200 OK, получено {response.status_code}, {response.text}'\n>       assert len(response.json().get('orders')) == 1, f'Количество принятых курьером заказов на станции {expected_station_1} не 1, {response.json().get('orders')}'\nE       AssertionError: Количество принятых курьером заказов на станции 110 не 1, []\nE       assert 0 == 1\nE        +  where 0 = len([])\nE        +    where [] = <built-in method get of dict object at 0x00000233CC508640>('orders')\nE        +      where <built-in method get of dict object at 0x00000233CC508640> = {'availableStations': [], 'orders': [], 'pageInfo': {'limit': 30, 'page': 0, 'total': 0}}.get\nE        +        where {'availableStations': [], 'orders': [], 'pageInfo': {'limit': 30, 'page': 0, 'total': 0}} = json()\nE        +          where json = <Response [200]>.json\n\ntests\\test_get_orders_list.py:40: AssertionError"}, "description": "Создаем курьера фикстурой courier_id и получаем его ID. Cоздаем заказ на станции метро 110 и на станции метро 89. Курьер принимает заказы. Отправляем GET запрос на ручку /api/v1/orders?courierId=IDКурьера&nearestStation=[\"110\"]. Проверяем что ответ 200 OK, в списке вернулся 1 заказ на станции метро 110 и его track номер соответствует принятому заказу. Курьер удаляется из системы фикстурой courier_id.", "steps": [{"name": "Создание заказа на заданной ветке метро, проверка наличия в системе и возвращение его номера", "status": "passed", "steps": [{"name": "Изменение одного из полей данных для соответствия тестовому сценарию.", "status": "passed", "parameters": [{"name": "param", "value": "{'firstName': 'Naruto', 'lastName': 'Uchiha', 'address': 'Konoha, 142 apt.', 'metroStation': 4, 'phone': '+7 800 355 35 35', 'rentTime': 5, 'deliveryDate': '2025-03-03', 'comment': 'Saske, come back to Konoha', 'color': ['BLACK']}"}, {"name": "key", "value": "'metroStation'"}, {"name": "value", "value": "'110'"}], "start": 1738945780199, "stop": 1738945780199}, {"name": "POST request.", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders'"}, {"name": "payload", "value": "{'firstName': 'Naruto', 'lastName': 'Uchiha', 'address': 'Konoha, 142 apt.', 'metroStation': '110', 'phone': '+7 800 355 35 35', 'rentTime': 5, 'deliveryDate': '2025-03-03', 'comment': 'Saske, come back to Konoha', 'color': ['BLACK']}"}], "start": 1738945780199, "stop": 1738945780258}, {"name": "Проверка наличия заказа в системе, поиск по номеру.", "status": "passed", "steps": [{"name": "GET request.", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders/track?t=787746'"}], "start": 1738945780259, "stop": 1738945780337}], "parameters": [{"name": "order_track", "value": "787746"}], "start": 1738945780259, "stop": 1738945780337}], "parameters": [{"name": "line", "value": "'110'"}], "start": 1738945780198, "stop": 1738945780337}, {"name": "Создание заказа на заданной ветке метро, проверка наличия в системе и возвращение его номера", "status": "passed", "steps": [{"name": "Изменение одного из полей данных для соответствия тестовому сценарию.", "status": "passed", "parameters": [{"name": "param", "value": "{'firstName': 'Naruto', 'lastName': 'Uchiha', 'address': 'Konoha, 142 apt.', 'metroStation': 4, 'phone': '+7 800 355 35 35', 'rentTime': 5, 'deliveryDate': '2025-03-03', 'comment': 'Saske, come back to Konoha', 'color': ['BLACK']}"}, {"name": "key", "value": "'metroStation'"}, {"name": "value", "value": "'89'"}], "start": 1738945780338, "stop": 1738945780338}, {"name": "POST request.", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders'"}, {"name": "payload", "value": "{'firstName': 'Naruto', 'lastName': 'Uchiha', 'address': 'Konoha, 142 apt.', 'metroStation': '89', 'phone': '+7 800 355 35 35', 'rentTime': 5, 'deliveryDate': '2025-03-03', 'comment': 'Saske, come back to Konoha', 'color': ['BLACK']}"}], "start": 1738945780338, "stop": 1738945780412}, {"name": "Проверка наличия заказа в системе, поиск по номеру.", "status": "passed", "steps": [{"name": "GET request.", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders/track?t=302167'"}], "start": 1738945780413, "stop": 1738945780478}], "parameters": [{"name": "order_track", "value": "302167"}], "start": 1738945780413, "stop": 1738945780478}], "parameters": [{"name": "line", "value": "'89'"}], "start": 1738945780337, "stop": 1738945780479}, {"name": "Принятие заказа курьером", "status": "passed", "steps": [{"name": "PUT request без payload", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders/accept/787746?courierId=465021'"}], "start": 1738945780479, "stop": 1738945780569}], "parameters": [{"name": "courier_id", "value": "465021"}, {"name": "order_track", "value": "787746"}], "start": 1738945780479, "stop": 1738945780569}, {"name": "Принятие заказа курьером", "status": "passed", "steps": [{"name": "PUT request без payload", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders/accept/302167?courierId=465021'"}], "start": 1738945780569, "stop": 1738945780647}], "parameters": [{"name": "courier_id", "value": "465021"}, {"name": "order_track", "value": "302167"}], "start": 1738945780569, "stop": 1738945780647}, {"name": "GET request.", "status": "passed", "parameters": [{"name": "path", "value": "'/api/v1/orders/?courierId=465021&nearestStation=[\"110\"]'"}], "start": 1738945780647, "stop": 1738945780714}], "attachments": [{"name": "stdout", "source": "4637d811-be4e-4190-9d89-9f3de9d0762c-attachment.txt", "type": "text/plain"}], "start": 1738945780198, "stop": 1738945780715, "uuid": "8c513cd2-69ca-4ec3-a53f-872dfc1b8294", "historyId": "225889f92ae56e3889774697b0be4a98", "testCaseId": "225889f92ae56e3889774697b0be4a98", "fullName": "tests.test_get_orders_list.TestGetOrdersList#test_get_orders_list_orders_accepted_by_courier_set_station_success_200", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_orders_list"}, {"name": "subSuite", "value": "TestGetOrdersList"}, {"name": "host", "value": "k-julls"}, {"name": "thread", "value": "14568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_orders_list"}]}